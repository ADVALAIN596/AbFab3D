<?xml version="1.0" standalone="yes"?>

<project basedir="." default="compile" name="AbFab">
    <import file="build_common.xml" />
  
    <description></description>

    <property name="version" value="0.5.0" />    
    <property name="src.dir" value="${basedir}/src"/>
    <property name="apps.dir" value="${basedir}/apps"/>
    <property name="release.dir" value="${basedir}/release"/>
    <property name="test.dir" value="${basedir}/test/junit"/>
    <property name="classes.dir" value="${basedir}/classes" />
    <property name="test.classes.dir" value="${classes.dir}/test" />      
    <property name="jar.dir" value="${basedir}/jars" />
    <property name="lib.dir" value="${basedir}/lib"/>
    <property name="manifest.dir" value="${basedir}/manifest"/>
    <property name="javadocs.dir" value="${basedir}/docs/javadoc"/>
    <property name="xj3d.dir" value="..\..\..\xj3d\software\Xj3D2\Xj3D\trunk" />
    <property name="av3d.dir" value="..\..\..\j3d.org\aviatrix3d-2\aviatrix3d" />    

    <property name="entrypoint" value="abfab3d.Creator" />

    <property name="runarg0" value="-Xmx768m"/>
<!--    
    <property name="runarg1" value="-Dsun.java2d.noddraw=true"/>
    <property name="runarg2" value="-Djava.library.path=&quot;./natives/${os.name}/${os.arch}&quot;" />
-->
    <property name="jvmrunargs" value="${runarg0}"/>

    <target name="build" 
        description="Complete clean, setup, compilation, run" 
        depends="clean,init,compile" />

    <!-- Create destination directories -->
    <target name="init" description="Create destination directories">
        <mkdir dir="${classes.dir}"/>
        <mkdir dir="${javadocs.dir}"/>
	<mkdir dir="${test.classes.dir}" />        
    </target>
  
    <target name="compile" depends="init" description="Compile all Java source files">
        <compilejava package="abfab3d/util"
            jars=""
        />
        <compilejava package="abfab3d/path"
            jars=""
        />
        <compilejava package="abfab3d/grid"
            jars=""
        />
        <compilejava package="abfab3d/grid/op"
            jars=""
        />
        <compilejava package="abfab3d/grid/query"
            jars=""
        />
        <compilejava package="abfab3d/geom"
            jars=""
        />
        <compilejava package="abfab3d/io/input"
            jars="vlc.jar uri.jar xj3d-core_2.0.0.jar xj3d.cadfilter_2.0.0.jar"
        />
        <compilejava package="abfab3d/io/output"
            jars="vlc.jar uri.jar xj3d-core_2.0.0.jar xj3d.cadfilter_2.0.0.jar"
        />
        <compilejava package="abfab3d/validate"
            jars=""
        />
    </target>

    <target name="compileApps" depends="init" description="Compile all applications">
       <echo message="Compiling CADFilter" />
       <ant dir="apps/linkedcube" inheritAll="false" />
    </target>
  
    <target name="run" depends="compile" description="Run the application">
        <echo message="jvmargs: ${jvmrunargs}" />
        <java classname="${entrypoint}" fork="true">
            <jvmarg line="${jvmrunargs}"/>
            <classpath>
                <pathelement path="${classes.dir}" />
                <fileset dir="${lib.dir}" includes="**/*.jar" excludes="" />   
<!--                <fileset dir="natives/${os.name}/${os.arch}" includes="**/*.jar" /> -->
            </classpath>
        </java>  
    </target>

    <target name="javadoc" description="Generates javadoc" depends="compile">
        <echo message="Generating javadoc..." />
        <javadoc sourcepath="${src.dir}/java" 
            destdir="${javadocs.dir}" 
            packagenames="*"
            version="true"
            author="yes">        
        </javadoc>
    </target>
  
    <target name="jar" depends="compile">
        <createjar name="abfab3d_core" 
            version="${version}"
            manifest="abfab3d_core.mf"
            includes="abfab3d/geom/*
                abfab3d/grid/*
                abfab3d/intersect/*
                "
        />
    </target>

  <target name="test" depends="compileTest">
    <junit printsummary="yes" haltonerror="no" haltonfailure="yes" fork="yes" showoutput="true">
      <jvmarg line="${jvmrunargs}"/>
    
      <formatter type="plain" usefile="false"/>
      <batchtest fork="yes" >
        <fileset dir="${test.dir}">
<!--          <include name="**/*Test.java"/> -->
          <include name="**/Test*Suite.java"/>
        </fileset>
     </batchtest>
      
      <classpath>
         <pathelement path="${classes.dir}" />
         <pathelement path="${test.classes.dir}" />
         <fileset dir="${lib.dir}" includes="**/*.jar" />
      </classpath>
    </junit>
  </target>

  <target name="compileTest" depends="init" description="Compile all Test source files">
     <mkdir dir="${test.classes.dir}" />
     <compilejava destdir="${test.classes.dir}" srcdir="${test.dir}" package="abfab3d/path" jars="support/junit-4.8.1.jar" />
     <compilejava destdir="${test.classes.dir}" srcdir="${test.dir}" package="abfab3d/grid" jars="support/junit-4.8.1.jar" />
     <compilejava destdir="${test.classes.dir}" srcdir="${test.dir}" package="abfab3d/grid/op" jars="support/junit-4.8.1.jar" />
     <compilejava destdir="${test.classes.dir}" srcdir="${test.dir}" package="abfab3d/grid/query" jars="support/junit-4.8.1.jar" />
     <compilejava destdir="${test.classes.dir}" srcdir="${test.dir}" package="" jars="support/junit-4.8.1.jar" />
  </target>

  <target name="testSpecific" depends="compile,compileTest">
    <junit printsummary="yes" haltonerror="no" haltonfailure="yes" fork="yes" showoutput="true">
      <jvmarg line="${jvmrunargs}"/>
    
      <formatter type="plain" usefile="false"/>
      <batchtest fork="yes" >
        <fileset dir="${test.dir}">
          <include name="**/${test}.java"/>
        </fileset>
     </batchtest>
      
      <classpath>
         <pathelement path="${classes.dir}" />
         <pathelement path="${test.classes.dir}" />
         <fileset dir="${lib.dir}" includes="**/*.jar" />   
      </classpath>
    </junit>
  </target>
    
    <target name="clean" description="Deletes all the generated artifacts.">
        <delete dir="${javadocs.dir}" />
        <delete dir="${classes.dir}" />
    </target>
    
    <target name="updateXj3D">
      <copy todir="${lib.dir}" includeEmptyDirs="false">
         <fileset dir="${xj3d.dir}/jars" excludes="org.* xj3d-all*.jar xj3d-imm*.jar xj3d-int*.jar">
            <depth max="0" />
         </fileset>
      </copy>          
    </target>
    
</project>

