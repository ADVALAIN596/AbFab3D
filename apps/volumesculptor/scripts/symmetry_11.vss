importPackage(Packages.abfab3d.grid)
importPackage(Packages.abfab3d.datasources)
importPackage(Packages.abfab3d.transforms)

var voxelSize = 0.1*MM;

function makePart(size, thickness){

  var t = (thickness/2) * 1.5;
  var s = size/2;
  var g = createGrid(-t, t, -t, t, -s, s,voxelSize);
  
  var boxZ = new Box(0,0,0,thickness, thickness, size);
  
  maker.setDataSource(boxZ);
  maker.makeGrid(g);
  
  
  var gm = new GridMipMap(g);
  
  gm.setScalingType(GridMipMap.SCALING_MAX);  
  
  return gm;
  
}


function main(){

	var a = 25*MM;
		
	dest = createGrid(-a,a,-2*a,2*a,-a,a,voxelSize);
	
	var cz = 20.*MM;
	var cx = 5.*MM;
	var cy = 5.*MM;
	
	var part = makePart(30*MM, 5*MM);
	
	part.setTransform(new Rotation(new Vector3D(-1.3,1,0), 2*Math.PI/5));
	
	var dt = new DataTransformer();
	var union = new Union();
	union.add(part);
	union.add(new LimitSet(2*MM, 0.03));
	
	dt.setDataSource(union);	
	
	var sym = new ReflectionSymmetry();
	sym.setRiemannSphereRadius(25*MM);
    sym.setGroup(ReflectionSymmetries.getQuad_2(23*MM, 60*MM, 25*MM, Math.PI/3));
	sym.setMaxCount(25);
	
	dt.setTransform(sym);
	
	maker.setDataSource(dt);
	maker.makeGrid(dest);
	
	return dest;
	
}